name: Build TCMT Windows Client

on:
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: Project1/Project1.sln
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64
  ERROR_KEYWORDS: "error|warning|fatal|undefined"
  LOG_SUMMARY_LINES: 50

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Cache CUDA Toolkit
      uses: actions/cache@v3
      with:
        path: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA
        key: cuda-12.6.0

    - name: Setup CUDA 12.6
      uses: Jimver/cuda-toolkit@v0.2.18
      with:
        cuda: '12.6.0'
        method: 'network'

    - name: Show CUDA directory contents
      run: dir "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA"

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Cache .NET tools
      uses: actions/cache@v3
      with:
        path: ~/.dotnet/tools
        key: dotnet-tools-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}

    - name: Setup Visual Studio environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Setup .NET Framework
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build LibreHardwareMonitorLib
      shell: bash
      run: |
        cd src/third_party/LibreHardwareMonitor
        dotnet build LibreHardwareMonitorLib/LibreHardwareMonitorLib.csproj -c Release -f net472 2>&1 | tee ../../../build_lib.log

    - name: Build CPP-parsers
      shell: bash
      run: |
        msbuild src/CPP-parsers/CPP-parsers/CPP-parsers.vcxproj /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=10.0 /m 2>&1 | tee cpp_parsers_build.log

    - name: Build WPF-UI1
      shell: bash
      run: |
        cd WPF-UI1
        dotnet build WPF-UI1.csproj -c Release 2>&1 | tee ../wpfui1_build.log

    - name: Build main project
      shell: bash
      run: |
        msbuild ${{ env.SOLUTION_FILE_PATH }} /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=${{ env.BUILD_PLATFORM }} /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=10.0 /m 2>&1 | tee main_build.log

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: TCMT-Windows-Client-${{ env.BUILD_PLATFORM }}-${{ env.BUILD_CONFIGURATION }}
        path: |
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.exe
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.dll
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.pdb

    - name: Comment build result to PR
      if: failure()
      shell: bash
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
      run: |
        # 兜底PR号
        pr_number="$PR_NUMBER"
        if [[ -z "$pr_number" ]]; then
          pr_number=$(echo "$GITHUB_REF" | sed -n 's#refs/pull/\([0-9]\+\)/merge#\1#p')
        fi
        if [[ -z "$pr_number" ]]; then
          echo "No PR number found, skip commenting"
          exit 0
        fi

        # 合并并过滤日志
        (
          echo "==== main_build.log ===="
          grep -iE "${ERROR_KEYWORDS}" main_build.log | tail -n $LOG_SUMMARY_LINES
          echo "==== cpp_parsers_build.log ===="
          grep -iE "${ERROR_KEYWORDS}" cpp_parsers_build.log | tail -n 20
          echo "==== wpfui1_build.log ===="
          grep -iE "${ERROR_KEYWORDS}" wpfui1_build.log | tail -n 10
          echo "==== build_lib.log ===="
          grep -iE "${ERROR_KEYWORDS}" build_lib.log | tail -n 10
        ) > build_errors_summary.log

        err_summary=$(cat build_errors_summary.log | sed 's/"/\\"/g')
        comment="PR编译失败了，@copilot\n\n关键错误日志如下：\n\`\`\`\n$err_summary\n\`\`\`\n如需完整日志请查Actions artifacts。"

        # 必须加 User-Agent
        curl -s -X POST -H "Authorization: token $GITHUB_TOKEN" \
          -H "User-Agent: github-actions-bash" \
          -H "Accept: application/vnd.github+json" \
          -d "{\"body\":\"$comment\"}" \
          "https://api.github.com/repos/${GITHUB_REPOSITORY}/issues/$pr_number/comments"
        Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $body
