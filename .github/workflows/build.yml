name: Build TCMT Windows Client

on:
  pull_request:
    branches: [ main , dev ]
  workflow_dispatch:

env:
  SOLUTION_FILE_PATH: Project1/Project1.sln
  BUILD_CONFIGURATION: Release
  BUILD_PLATFORM: x64
  ERROR_KEYWORDS: "error|warning|fatal|undefined"
  LOG_SUMMARY_LINES: 50

jobs:
  build:
    runs-on: windows-2022

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
        fetch-depth: 0

    - name: Cache CUDA Toolkit
      uses: actions/cache@v3
      with:
        path: C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA
        key: cuda-12.6.0

    - name: Setup CUDA 12.6
      uses: Jimver/cuda-toolkit@v0.2.18
      with:
        cuda: '12.6.0'
        method: 'local'

    - name: Show CUDA directory contents
      run: dir "C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA"

    - name: Setup MSBuild
      uses: microsoft/setup-msbuild@v2

    - name: Cache .NET tools
      uses: actions/cache@v3
      with:
        path: ~/.dotnet/tools
        key: dotnet-tools-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}

    - name: Setup Visual Studio environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Setup .NET Framework
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.x'

    - name: Restore NuGet packages
      run: nuget restore ${{ env.SOLUTION_FILE_PATH }}

    - name: Build LibreHardwareMonitorLib
      run: |
        cd src/third_party/LibreHardwareMonitor
        dotnet build LibreHardwareMonitorLib/LibreHardwareMonitorLib.csproj -c Release -f net472 2>&1 | Tee-Object -FilePath ..\..\..\build_lib.log

    - name: Build CPP-parsers
      run: |
        msbuild src/CPP-parsers/CPP-parsers/CPP-parsers.vcxproj /p:Configuration=Release /p:Platform=x64 /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=10.0 /m 2>&1 | Tee-Object -FilePath cpp_parsers_build.log

    - name: Build WPF-UI1
      run: |
        cd WPF-UI1
        dotnet build WPF-UI1.csproj -c Release 2>&1 | Tee-Object -FilePath ..\wpfui1_build.log

    - name: Build main project
      run: |
        msbuild ${{ env.SOLUTION_FILE_PATH }} /p:Configuration=${{ env.BUILD_CONFIGURATION }} /p:Platform=${{ env.BUILD_PLATFORM }} /p:PlatformToolset=v143 /p:WindowsTargetPlatformVersion=10.0 /m 2>&1 | Tee-Object -FilePath main_build.log

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: TCMT-Windows-Client-${{ env.BUILD_PLATFORM }}-${{ env.BUILD_CONFIGURATION }}
        path: |
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.exe
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.dll
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.pdb

    # 自动评论PR（PowerShell语法，编译失败时触发）
    - name: Comment build result to PR
      if: failure()
      env:
        GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
      shell: pwsh
      run: |
        # 获取PR号
        $PR_NUMBER = $env:GITHUB_EVENT_PULL_REQUEST_NUMBER
        if (-not $PR_NUMBER) {
          if ($env:GITHUB_REF -match 'refs/pull/(\d+)/merge') {
            $PR_NUMBER = $Matches[1]
          } else {
            Write-Host "No PR number found, skip commenting"
            exit 0
          }
        }

        # 合并并过滤日志
        $mainLog = Get-Content main_build.log | Select-String -Pattern $env:ERROR_KEYWORDS | Select-Object -Last $env:LOG_SUMMARY_LINES
        $cppLog = Get-Content cpp_parsers_build.log | Select-String -Pattern $env:ERROR_KEYWORDS | Select-Object -Last 20
        $wpfLog = Get-Content wpfui1_build.log | Select-String -Pattern $env:ERROR_KEYWORDS | Select-Object -Last 10
        $libLog = Get-Content build_lib.log | Select-String -Pattern $env:ERROR_KEYWORDS | Select-Object -Last 10

        $fullLog = "==== main_build.log ====`n$($mainLog)`n==== cpp_parsers_build.log ====`n$($cppLog)`n==== wpfui1_build.log ====`n$($wpfLog)`n==== build_lib.log ====`n$($libLog)"
        $fullLog = $fullLog -replace '"','\"'

        $comment = "PR编译失败了，@copilot`n`n关键错误日志如下：`n```$fullLog``` `n如需完整日志请查Actions artifacts。"

        $headers = @{ Authorization = "token $env:GITHUB_TOKEN" }
        $body = @{ body = $comment } | ConvertTo-Json
        $repo = $env:GITHUB_REPOSITORY
        $url = "https://api.github.com/repos/$repo/issues/$PR_NUMBER/comments"
        Invoke-RestMethod -Uri $url -Method Post -Headers $headers -Body $body
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.exe
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.dll
          Project1/x64/${{ env.BUILD_CONFIGURATION }}/*.pdb
